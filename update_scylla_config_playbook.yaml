# update_scylla_config_playbook.yaml

# this playbook will upgrade the scylla config file

# --------------------------------------------------------------------------- #

- name: "update scylla config"
  hosts: "all"
  gather_facts: true
  serial: 1

  tasks:

    - name: "check cluster membership"
      ansible.builtin.command: "nodetool status"
      register: "nodetool_status"
      # fail if the output of the "nodetool status" 
      # command contains any indicators of a any 
      # nodes being down.
      failed_when: "('DN' in nodetool_status.stdout) or 
                    ('?N' in nodetool_status.stdout) or 
                    ('JN' in nodetool_status.stdout)"
    
    - name: "debug cluster membership"
      ansible.builtin.debug:
        msg: "{{ nodetool_status }}"

    # drain a single node since updating the scylla.yaml
    # file will require a restart to apply. so draining
    # the node will make it safe to restart it.
    - name: "drain the node"
      ansible.builtin.command: "nodetool drain"

    - name: "check node drain status"
      ansible.builtin.command: "nodetool status"
      register: nodetool_drain_status

    - name: "debug drain status"
      ansible.builtin.debug:
        msg: "{{ nodetool_drain_status }}"

    - name: "update scylla config"
      ansible.builtin.lineinfile:
        line: "foo: bar"
        path: "/etc/scylla/scylla.yaml"
        regexp: "^foo"
        state: "present"

    - name: "restart scylla server"
      ansible.builtin.command: "supervisorctl restart scylla-server"
      register: scylla_server_status

    - name: "debug scylla status"
      ansible.builtin.debug:
        msg: "{{ scylla_server_status }}"

    - name: "check cluster membership"
      ansible.builtin.command: "nodetool status"
      register: "nodetool_status"
      # fail if the output of the "nodetool status" 
      # command contains any indicators of a any 
      # nodes being down.
      failed_when: "('DN' in nodetool_status.stdout) or 
                    ('?N' in nodetool_status.stdout) or 
                    ('JN' in nodetool_status.stdout)"

#EOF